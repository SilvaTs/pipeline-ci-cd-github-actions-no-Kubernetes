name: CI-CD
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: echo "Checkout do código fonte"
        uses: actions/checkout@v4.1.7     

      - name: Login no Docker Hub
        uses: docker/login-action@v3.2.0
        with: 
          userName: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Passo 01
        run: echo "Construir a imagem da aplicação"
      - name: Passo 02
        run: echo "Publicar a imagem no Docker Hub"
      
      - name: Construção da imagem docker e envio para o docker hub
        uses: docker/build-push-action@v6.2.0
        with:
          context: ./src
          push: true
          file: ./src/Review-Filmes.Web/Dockerfile
          tags: |
            silvats/review-filmes:v${{ github.run_number }}
            silvats/review-filmes:latest
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Generate temporary kubeconfig 
        run: |
          kubectl get secret $(kubectl get serviceaccount ci-cd-sa -o jsonpath='{.secrets[].name}') -o jsonpath='{.data.token}' | base64 -d > /tmp/kubeconfig
        env:
          KUBECONFIG: /tmp/kubeconfig

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash

      - name: Create k3d cluster
        run: k3d cluster create meucluster --servers 3 --agents 3 -p "30000:30000@loadbalancer" --wait

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/deployment.yaml

      - name: Wait for deployment rollout
        run: kubectl rollout status deployment/coredns -n kube-system
